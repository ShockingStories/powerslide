function columnGraph(r,t){for(var n=80,e=300,a=d3.select(r).append("svg:svg").attr("class","chart").attr("width",n).attr("height",e).append("svg:g").attr("transform","translate(0,300)"),o=[t],c=[],l=0;l<o[0].length-1;l++)c.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")");x=d3.scale.ordinal().rangeRoundBands([0,n]),y=d3.scale.linear().range([0,e]),z=d3.scale.ordinal().range(c);var s=["c1","c2","c3","c4","c5"].map(function(r,t){return o.map(function(r,n){return{x:n,y:r[t+1]}})}),i=d3.layout.stack()(s);x.domain(i[0].map(function(r){return r.x})),y.domain([0,d3.max(i[i.length-1],function(r){return r.y0+r.y})]);{var d=a.selectAll("g.valgroup").data(i).enter().append("svg:g").attr("class","valgroup").style("fill",function(r,t){return z(t)}).style("stroke",function(r,t){return d3.rgb(z(t)).darker()});d.selectAll("rect").data(function(r){return r}).enter().append("svg:rect").attr("x",function(r){return x(r.x)}).attr("y",function(r){return-y(r.y0)-y(r.y)}).attr("height",function(r){return y(r.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function randomRGB(){return Math.floor(256*Math.random())}function shockingUpdate(r){console.log("shockingUpdate - Inputs: "+JSON.stringify(r));var t={Hydro:24095,Geothermal:6487,Wind:2187,Coal:1832,Gas:6626},n={Hydro:0,Geothermal:847.32,Wind:0,Coal:1222.2,Gas:3405.51},e={Road:12688},a=r.electric_cars,o=a/100;e.Road=e.Road*(1-o),ev_power_reqts=2406.4*3341013*o,ev_power_reqts/=1e6;var c=0;for(var l in t)c+=t[l];var s=1+ev_power_reqts/c;console.log("total: "+c),console.log("increase from electric vehicles: "+s),console.log("ev_power_reqts "+ev_power_reqts);for(var l in n)n[l]=n[l]*s;var i={gen_production:t,gen_emissions:n,fleet_emissions:e};return console.log("Result: "+JSON.stringify(i)),i}document.addEventListener("DOMContentLoaded",function(r){columnGraph("#co2-chart",[1,10,20,20,25,50]),columnGraph("#gwh-chart",[1,10,15,20,30,50]),columnGraph("#cost-chart",[1,10,15,15,35,50]),columnGraph("#investment-chart",[1,5,10,15,45,50])});var input_example={electric_cars:2};
//# sourceMappingURL=data:application/json;base64,