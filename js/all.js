function getRangeValues(){return{carNumber:document.getElementById("carNumber").value,solarNumber:document.getElementById("solarNumber").value,homeNumber:document.getElementById("homeNumber").value,windfarmNumber:document.getElementById("windfarmNumber").value,bicycleNumber:document.getElementById("bicycleNumber").value}}function updateCharts(e,t){document.getElementById(e+"Number").value=t,document.getElementById(e+"Range").value=t;var n=shockingUpdate(getRangeValues());updateGraph("gwh-chart",n.gen_production),updateGraph("co2-chart",{Geothermal:n.gen_emissions.Geothermal,Coal:n.gen_emissions.Coal,Gas:n.gen_emissions.Gas,Road:n.fleet_emissions.Road})}function preprocessData(e,t){var n=[1],r=0;for(var a in e)e.hasOwnProperty(a)&&(r+=e[a],n.push(e[a]));t>0&&n.push(t);for(var o=1;o<n.length;o++)n[o]=Math.round(n[o]/r*100);return n}function updateTotal(e,t){var n=0;for(var r in t)t.hasOwnProperty(r)&&(n+=t[r]);return n=Math.round(n),document.getElementById(e).innerHTML=n,n}function assignColors(e,t){var n=[];switch(e){case"co2":n.push("#ff9900"),n.push("#999999"),n.push("#f3f3f3"),n.push("#34495e");break;case"gwh":n.push("#6d9eeb"),n.push("#ff9900"),n.push("#c9daf8"),n.push("#999999"),n.push("#f3f3f3"),n.push("#ffd966");break;case"cost":break;case"investment":}return t>0&&n.push("none"),n}function updateGraph(e,t){var n=80,r=300,a=e.split("-")[0],o=a+"-total",s=updateTotal(o,t);totals[o]||(totals[o]=parseInt(document.getElementById(o).innerHTML,10));for(var u=totals[o]-s,l=document.getElementById(e);l.firstChild;)l.removeChild(l.firstChild);var c=d3.select("#"+e).append("svg:svg").attr("class","chart").attr("width",n).attr("height",r).append("svg:g").attr("transform","translate(0,"+r+")"),d=[preprocessData(t,u)],i=assignColors(a,u);x=d3.scale.ordinal().rangeRoundBands([0,n]),y=d3.scale.linear().range([0,r]),z=d3.scale.ordinal().range(i);for(var m=[],g=1;g<d[0].length;g++)m.push("c"+g);var p=m.map(function(e,t){return d.map(function(e,n){return{x:n,y:e[t+1]}})}),h=d3.layout.stack()(p);x.domain(h[0].map(function(e){return e.x})),y.domain([0,d3.max(h[h.length-1],function(e){return e.y0+e.y})]);{var f=c.selectAll("g.valgroup").data(h).enter().append("svg:g").attr("class","valgroup").style("fill",function(e,t){return z(t)}).style("stroke",function(e,t){return"none"!==z(t)?d3.rgb(z(t)).darker():"none"});f.selectAll("rect").data(function(e){return e}).enter().append("svg:rect").attr("x",function(e){return x(e.x)}).attr("y",function(e){return-y(e.y0)-y(e.y)}).attr("height",function(e){return y(e.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function randomRGB(){return Math.floor(256*Math.random())}function columnGraph(e,t){for(var n=80,r=300,a=d3.select(e).append("svg:svg").attr("class","chart").attr("width",n).attr("height",r).append("svg:g").attr("transform","translate(0,300)"),o=[t],s=[],u=0;u<o[0].length-1;u++)s.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")");x=d3.scale.ordinal().rangeRoundBands([0,n]),y=d3.scale.linear().range([0,r]),z=d3.scale.ordinal().range(s);var l=["c1","c2","c3","c4","c5"].map(function(e,t){return o.map(function(e,n){return{x:n,y:e[t+1]}})}),c=d3.layout.stack()(l);x.domain(c[0].map(function(e){return e.x})),y.domain([0,d3.max(c[c.length-1],function(e){return e.y0+e.y})]);{var d=a.selectAll("g.valgroup").data(c).enter().append("svg:g").attr("class","valgroup").style("fill",function(e,t){return z(t)}).style("stroke",function(e,t){return d3.rgb(z(t)).darker()});d.selectAll("rect").data(function(e){return e}).enter().append("svg:rect").attr("x",function(e){return x(e.x)}).attr("y",function(e){return-y(e.y0)-y(e.y)}).attr("height",function(e){return y(e.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function shockingUpdate(e){var t=getBaseline(),n=t.gen_production,r=t.gen_emissions,a=t.gen_cost,o={},s={Road:12688},u=e.carNumber,l=u/100;s.Road=s.Road*(1-l),ev_power_reqts=2406.4*3341013*l,ev_power_reqts/=1e6;var c=0;for(var d in n)c+=n[d];var i=1+ev_power_reqts/c,m=e.solarNumber,g=5260*m;g/=1e6;var p=g/c;i-=p;for(var d in n)n[d]=n[d]*i;n.Solar=g;for(var d in r)r[d]=r[d]*i;for(var d in r)r[d]=r[d]*i;for(var d in a)a[d]=a[d]*i;var h={gen_production:n,gen_emissions:r,gen_cost:a,gen_capital_cost:o,fleet_emissions:s};return h}function getBaseline(){var e={Hydro:24095,Geothermal:6487,Wind:2187,Coal:1832,Gas:6626,Solar:0},t={Hydro:0,Geothermal:847.32,Wind:0,Coal:1222.2,Gas:3405.51},n={Hydro:53872180,Geothermal:59535e3,Wind:43484e3,Coal:34177200,Gas:161044192},r={gen_production:e,gen_emissions:t,gen_cost:n};return r}function powerOff(){document.body.style.display="none",document.getElementsByTagName("html")[0].style.backgroundColor="black",setTimeout(function(){document.body.style.display="block",document.getElementsByTagName("html")[0].style.backgroundColor="none"},3e3)}var totals={};document.addEventListener("DOMContentLoaded",function(e){updateCharts("car",0),columnGraph("#cost-chart",[1,10,15,15,35,50]),columnGraph("#investment-chart",[1,5,10,15,45,50])});
//# sourceMappingURL=data:application/json;base64,