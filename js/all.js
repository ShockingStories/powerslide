function getRangeValues(){return{carNumber:document.getElementById("carNumber").value,solarNumber:document.getElementById("solarNumber").value,homeNumber:document.getElementById("homeNumber").value,powerOffNumber:document.getElementById("powerOffNumber").value,windfarmNumber:document.getElementById("windfarmNumber").value,busNumber:document.getElementById("busNumber").value,bicycleNumber:document.getElementById("bicycleNumber").value}}function updateCars(e){document.getElementById("carNumber").value=e,document.getElementById("carRange").value=e;var t=shockingUpdate(getRangeValues());console.log("Data from shockingUpdate: ",t),updateGraph("gwh-chart",t.gen_production),updateGraph("co2-chart",{Geothermal:t.gen_emissions.Geothermal,Coal:t.gen_emissions.Coal,Gas:t.gen_emissions.Gas,Road:t.fleet_emissions.Road})}function preprocessData(e,t){var r=[1],n=0;for(var a in e)e.hasOwnProperty(a)&&(n+=e[a],r.push(e[a]));t>0&&r.push(t);for(var o=1;o<r.length;o++)r[o]=Math.round(r[o]/n*100);return r}function updateTotal(e,t){var r=0;for(var n in t)t.hasOwnProperty(n)&&(r+=t[n]);return r=Math.round(r),console.log("Updated total: ",r),document.getElementById(e).innerHTML=r,r}function updateGraph(e,t){var r=80,n=300;console.log("Data passed in: ",t);var a=e.split("-")[0]+"-total",o=updateTotal(a,t);totals[a]||(console.log("Element: ",a,document.getElementById(a).innerHTML),totals[a]=parseInt(document.getElementById(a).innerHTML,10),console.log("TOTALS: ",totals));for(var l=totals[a]-o,s=document.getElementById(e);s.firstChild;)s.removeChild(s.firstChild);var u=d3.select("#"+e).append("svg:svg").attr("class","chart").attr("width",r).attr("height",n).append("svg:g").attr("transform","translate(0,"+n+")");console.log("DELTA: ",l);for(var c=[preprocessData(t,l)],d=[],i=0;i<c[0].length-1;i++)d.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")"),l>0&&(d[c[0].length-1]="rgb(255,255,255)");x=d3.scale.ordinal().rangeRoundBands([0,r]),y=d3.scale.linear().range([0,n]),z=d3.scale.ordinal().range(d);for(var g=[],i=1;i<c[0].length;i++)g.push("c"+i);var m=g.map(function(e,t){return c.map(function(e,r){return{x:r,y:e[t+1]}})}),p=d3.layout.stack()(m);x.domain(p[0].map(function(e){return e.x})),y.domain([0,d3.max(p[p.length-1],function(e){return e.y0+e.y})]);{var v=u.selectAll("g.valgroup").data(p).enter().append("svg:g").attr("class","valgroup").style("fill",function(e,t){return z(t)}).style("stroke",function(e,t){return d3.rgb(z(t)).darker()});v.selectAll("rect").data(function(e){return e}).enter().append("svg:rect").attr("x",function(e){return x(e.x)}).attr("y",function(e){return-y(e.y0)-y(e.y)}).attr("height",function(e){return y(e.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function randomRGB(){return Math.floor(256*Math.random())}function columnGraph(e,t){for(var r=80,n=300,a=d3.select(e).append("svg:svg").attr("class","chart").attr("width",r).attr("height",n).append("svg:g").attr("transform","translate(0,300)"),o=[t],l=[],s=0;s<o[0].length-1;s++)l.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")");x=d3.scale.ordinal().rangeRoundBands([0,r]),y=d3.scale.linear().range([0,n]),z=d3.scale.ordinal().range(l);var u=["c1","c2","c3","c4","c5"].map(function(e,t){return o.map(function(e,r){return{x:r,y:e[t+1]}})}),c=d3.layout.stack()(u);x.domain(c[0].map(function(e){return e.x})),y.domain([0,d3.max(c[c.length-1],function(e){return e.y0+e.y})]);{var d=a.selectAll("g.valgroup").data(c).enter().append("svg:g").attr("class","valgroup").style("fill",function(e,t){return z(t)}).style("stroke",function(e,t){return d3.rgb(z(t)).darker()});d.selectAll("rect").data(function(e){return e}).enter().append("svg:rect").attr("x",function(e){return x(e.x)}).attr("y",function(e){return-y(e.y0)-y(e.y)}).attr("height",function(e){return y(e.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function shockingUpdate(e){console.log("shockingUpdate - Inputs: "+JSON.stringify(e));var t=getBaseline(),r=t.gen_production,n=t.gen_emissions,a=t.gen_cost,o={Road:12688},l=e.carNumber,s=l/100;o.Road=o.Road*(1-s),ev_power_reqts=2406.4*3341013*s,ev_power_reqts/=1e6;var u=0;for(var c in r)u+=r[c];var d=1+ev_power_reqts/u;console.log("total: "+u),console.log("increase from electric vehicles: "+d),console.log("ev_power_reqts "+ev_power_reqts);var i=(e.solarNumber,5260*e.solarNumber);i/=1e6,console.log("solar production: "+i);var g=i/u;d-=g;for(var c in n)n[c]=n[c]*d;for(var c in r)r[c]=r[c]*d;r.Solar=i;for(var c in n)n[c]=n[c]*d;for(var c in a)a[c]=a[c]*d;var m={gen_production:r,gen_emissions:n,gen_cost:a,fleet_emissions:o};return console.log("Result: "+JSON.stringify(m)),m}function getBaseline(){var e={Hydro:24095,Geothermal:6487,Wind:2187,Coal:1832,Gas:6626},t={Hydro:0,Geothermal:847.32,Wind:0,Coal:1222.2,Gas:3405.51},r={Hydro:53872180,Geothermal:59535e3,Wind:43484e3,Coal:34177200,Gas:161044192},n={gen_production:e,gen_emissions:t,gen_cost:r};return n}var totals={};document.addEventListener("DOMContentLoaded",function(e){updateCars(0),columnGraph("#cost-chart",[1,10,15,15,35,50]),columnGraph("#investment-chart",[1,5,10,15,45,50])});
//# sourceMappingURL=data:application/json;base64,