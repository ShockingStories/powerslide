function columnGraph(t,e){for(var n=200,r=400,a=d3.select(t).append("svg:svg").attr("class","chart").attr("width",n).attr("height",r).append("svg:g").attr("transform","translate(50,400)"),o=[e],i=[],l=0;l<o[0].length-1;l++)i.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")");x=d3.scale.ordinal().rangeRoundBands([0,n-50]),y=d3.scale.linear().range([0,r-50]),z=d3.scale.ordinal().range(i);var s=["c1","c2","c3","c4","c5"].map(function(t,e){return o.map(function(t,n){return{x:n,y:t[e+1]}})}),d=d3.layout.stack()(s);x.domain(d[0].map(function(t){return t.x})),y.domain([0,d3.max(d[d.length-1],function(t){return t.y0+t.y})]);{var c=a.selectAll("g.valgroup").data(d).enter().append("svg:g").attr("class","valgroup").style("fill",function(t,e){return z(e)}).style("stroke",function(t,e){return d3.rgb(z(e)).darker()});c.selectAll("rect").data(function(t){return t}).enter().append("svg:rect").attr("x",function(t){return x(t.x)}).attr("y",function(t){return-y(t.y0)-y(t.y)}).attr("height",function(t){return y(t.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function randomRGB(){return Math.floor(256*Math.random())}document.addEventListener("DOMContentLoaded",function(t){columnGraph("#gwh",[1,20,30,40,60,100]),columnGraph("#co2",[1,20,40,40,50,100]),columnGraph("#cost",[1,20,30,30,70,100]),columnGraph("#investment",[1,10,20,30,90,100])}),function(t,e){"function"==typeof define&&define.amd?define(["d3"],e):"object"==typeof exports?(process.browser&&require("./d3.slider.css"),module.exports=e(require("d3"))):t.d3.slider=e(t.d3)}(this,function(t){return function(){"use strict";function e(e){e.each(function(){function e(e){"boolean"==typeof v&&(v=t.svg.axis().ticks(Math.round(u/100)).tickFormat(w).orient("horizontal"===p?"bottom":"right")),s=l.ticks?l.copy().range([0,u]):l.copy().rangePoints([0,u],.5),v.scale(s);var n=e.append("svg").classed("d3-slider-axis d3-slider-axis-"+v.orient(),!0).on("click",E),r=n.append("g");"horizontal"===p?(n.style("margin-left",-y+"px"),n.attr({width:u+2*y,height:y}),"top"===v.orient()?(n.style("top",-y+"px"),r.attr("transform","translate("+y+","+y+")")):r.attr("transform","translate("+y+",0)")):(n.style("top",-y+"px"),n.attr({width:y,height:u+2*y}),"left"===v.orient()?(n.style("left",-y+"px"),r.attr("transform","translate("+y+","+y+")")):r.attr("transform","translate(0,"+y+")")),r.call(v)}function g(){if("array"!=o(i)){var e=Math.max(0,Math.min(u,t.event.offsetX||t.event.layerX));n(l.invert?r(l.invert(e/u)):a(e/u))}}function m(){if("array"!=o(i)){var e=u-Math.max(0,Math.min(u,t.event.offsetY||t.event.layerY));n(l.invert?r(l.invert(e/u)):a(e/u))}}function b(){"handle-one"===t.event.sourceEvent.target.id?x=1:"handle-two"==t.event.sourceEvent.target.id&&(x=2);var e=Math.max(0,Math.min(u,t.event.x));n(l.invert?r(l.invert(e/u)):a(e/u))}function G(){"handle-one"===t.event.sourceEvent.target.id?x=1:"handle-two"==t.event.sourceEvent.target.id&&(x=2);var e=u-Math.max(0,Math.min(u,t.event.y));n(l.invert?r(l.invert(e/u)):a(e/u))}function E(){t.event.stopPropagation()}l||(l=t.scale.linear().domain([f,h])),i=i||l.domain()[0];var B=t.select(this).classed("d3-slider d3-slider-"+p,!0),F=t.behavior.drag();if(F.on("dragend",function(){k.slideend(t.event,i)}),"array"==o(i)&&2==i.length?(d=B.append("a").classed("d3-slider-handle",!0).attr("xlink:href","#").attr("id","handle-one").on("click",E).call(F),z=B.append("a").classed("d3-slider-handle",!0).attr("id","handle-two").attr("xlink:href","#").on("click",E).call(F)):d=B.append("a").classed("d3-slider-handle",!0).attr("xlink:href","#").attr("id","handle-one").on("click",E).call(F),"horizontal"===p){if(B.on("click",g),"array"==o(i)&&2==i.length){c=t.select(this).append("div").classed("d3-slider-range",!0),d.style("left",M(l(i[0]))),c.style("left",M(l(i[0]))),F.on("drag",b);var R=100-parseFloat(M(l(i[1])));z.style("left",M(l(i[1]))),c.style("right",R+"%"),F.on("drag",b)}else d.style("left",M(l(i))),F.on("drag",b);u=parseInt(B.style("width"),10)}else{if(B.on("click",m),F.on("drag",G),"array"==o(i)&&2==i.length){c=t.select(this).append("div").classed("d3-slider-range-vertical",!0),d.style("bottom",M(l(i[0]))),c.style("bottom",M(l(i[0]))),F.on("drag",G);var A=100-parseFloat(M(l(i[1])));z.style("bottom",M(l(i[1]))),c.style("top",A+"%"),F.on("drag",G)}else d.style("bottom",M(l(i))),F.on("drag",G);u=parseInt(B.style("height"),10)}v&&e(B)})}function n(e){var n="array"==o(i)&&2==i.length?i[x-1]:i,a=M(l(r(n))),s=M(l(r(e))),u="horizontal"===p?"left":"bottom";if(a!==s){if("array"==o(i)&&2==i.length?(i[x-1]=e,t.event&&k.slide(t.event,i)):t.event&&k.slide(t.event.sourceEvent||t.event,i=e),i[0]>=i[1])return;if(1===x)"array"==o(i)&&2==i.length&&("left"===u?c.style("left",s):c.style("bottom",s)),m?d.transition().styleTween(u,function(){return t.interpolate(a,s)}).duration("number"==typeof m?m:250):d.style(u,s);else{var f=100-parseFloat(s),h=100-parseFloat(s);"left"===u?c.style("right",f+"%"):c.style("top",h+"%"),m?z.transition().styleTween(u,function(){return t.interpolate(a,s)}).duration("number"==typeof m?m:250):z.style(u,s)}}}function r(t){if(t===l.domain()[0]||t===l.domain()[1])return t;var e=t;if(b)e=a(l(t));else{var n=(t-l.domain()[0])%g;e=t-n,2*Math.abs(n)>=g&&(e+=n>0?g:-g)}return e}function a(t){var e=l.ticks?l.ticks():l.domain(),n=e.map(function(e){return t-l(e)}),r=-1,a=0,o=l.ticks?l.range()[1]:l.rangeExtent()[1];do r++,Math.abs(n[r])<o&&(o=Math.abs(n[r]),a=r);while(n[r]>0&&r<n.length-1);return e[a]}function o(t){return{}.toString.call(t).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}var i,l,s,d,c,u,f=0,h=100,g=.01,m=!0,p="horizontal",v=!1,y=50,x=1,b=!1,k=t.dispatch("slide","slideend"),M=t.format(".2%"),w=t.format(".0"),z=null;return e.min=function(t){return arguments.length?(f=t,e):f},e.max=function(t){return arguments.length?(h=t,e):h},e.step=function(t){return arguments.length?(g=t,e):g},e.animate=function(t){return arguments.length?(m=t,e):m},e.orientation=function(t){return arguments.length?(p=t,e):p},e.axis=function(t){return arguments.length?(v=t,e):v},e.margin=function(t){return arguments.length?(y=t,e):y},e.value=function(t){return arguments.length?(i&&n(r(t)),i=t,e):i},e.snap=function(t){return arguments.length?(b=t,e):b},e.scale=function(t){return arguments.length?(l=t,e):l},t.rebind(e,k,"on"),e}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImxpYi9kM3NsaWRlci5qcyJdLCJuYW1lcyI6WyJjb2x1bW5HcmFwaCIsImJpbmRUbyIsInZhbHVlcyIsInciLCJoIiwic3ZnIiwiZDMiLCJzZWxlY3QiLCJhcHBlbmQiLCJhdHRyIiwibWF0cml4IiwiY29sb3JzIiwiaSIsImxlbmd0aCIsInB1c2giLCJyYW5kb21SR0IiLCJ4Iiwic2NhbGUiLCJvcmRpbmFsIiwicmFuZ2VSb3VuZEJhbmRzIiwieSIsImxpbmVhciIsInJhbmdlIiwieiIsInJlbWFwcGVkIiwibWFwIiwiZGF0IiwiZCIsImlpIiwic3RhY2tlZCIsImxheW91dCIsInN0YWNrIiwiZG9tYWluIiwibWF4IiwieTAiLCJ2YWxncm91cCIsInNlbGVjdEFsbCIsImRhdGEiLCJlbnRlciIsInN0eWxlIiwicmdiIiwiZGFya2VyIiwiTWF0aCIsIm1pbiIsImFwcGx5IiwicmFuZ2VCYW5kIiwiZmxvb3IiLCJyYW5kb20iLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInJvb3QiLCJmYWN0b3J5IiwiZGVmaW5lIiwiYW1kIiwiZXhwb3J0cyIsInByb2Nlc3MiLCJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsInNsaWRlciIsInRoaXMiLCJzZWxlY3Rpb24iLCJlYWNoIiwiY3JlYXRlQXhpcyIsImRvbSIsImF4aXMiLCJ0aWNrcyIsInJvdW5kIiwic2xpZGVyTGVuZ3RoIiwidGlja0Zvcm1hdCIsIm9yaWVudCIsIm9yaWVudGF0aW9uIiwiYXhpc1NjYWxlIiwiY29weSIsInJhbmdlUG9pbnRzIiwiY2xhc3NlZCIsIm9uIiwic3RvcFByb3BhZ2F0aW9uIiwiZyIsIm1hcmdpbiIsIndpZHRoIiwiaGVpZ2h0IiwiY2FsbCIsIm9uQ2xpY2tIb3Jpem9udGFsIiwidG9UeXBlIiwidmFsdWUiLCJwb3MiLCJvZmZzZXRYIiwibGF5ZXJYIiwibW92ZUhhbmRsZSIsImludmVydCIsInN0ZXBWYWx1ZSIsIm5lYXJlc3RUaWNrIiwib25DbGlja1ZlcnRpY2FsIiwib2Zmc2V0WSIsImxheWVyWSIsIm9uRHJhZ0hvcml6b250YWwiLCJzb3VyY2VFdmVudCIsInRhcmdldCIsImlkIiwiYWN0aXZlIiwib25EcmFnVmVydGljYWwiLCJkaXYiLCJkcmFnIiwiYmVoYXZpb3IiLCJkaXNwYXRjaCIsInNsaWRlZW5kIiwiaGFuZGxlMSIsImhhbmRsZTIiLCJkaXZSYW5nZSIsImZvcm1hdFBlcmNlbnQiLCJwYXJzZUZsb2F0IiwicGFyc2VJbnQiLCJ0b3AiLCJuZXdWYWx1ZSIsImN1cnJlbnRWYWx1ZSIsIm9sZFBvcyIsIm5ld1BvcyIsInBvc2l0aW9uIiwic2xpZGUiLCJhbmltYXRlIiwidHJhbnNpdGlvbiIsInN0eWxlVHdlZW4iLCJpbnRlcnBvbGF0ZSIsImR1cmF0aW9uIiwidmFsIiwiYWxpZ25WYWx1ZSIsInNuYXAiLCJ2YWxNb2RTdGVwIiwic3RlcCIsImFicyIsImRpc3QiLCJpbmRleCIsInIiLCJyYW5nZUV4dGVudCIsInYiLCJ0b1N0cmluZyIsIm1hdGNoIiwidG9Mb3dlckNhc2UiLCJmb3JtYXQiLCJfIiwiYXJndW1lbnRzIiwicmViaW5kIl0sIm1hcHBpbmdzIjoiQUFnQkEsUUFBQUEsYUFBQUMsRUFBQUMsR0FlQSxJQUFBLEdBZEFDLEdBQUEsSUFDQUMsRUFBQSxJQUVBQyxFQUFBQyxHQUFBQyxPQUFBTixHQUFBTyxPQUFBLFdBQ0FDLEtBQUEsUUFBQSxTQUNBQSxLQUFBLFFBQUFOLEdBQ0FNLEtBQUEsU0FBQUwsR0FDQUksT0FBQSxTQUNBQyxLQUFBLFlBQUEscUJBRUFDLEdBQUFSLEdBR0FTLEtBQ0FDLEVBQUEsRUFBQUEsRUFBQUYsRUFBQSxHQUFBRyxPQUFBLEVBQUFELElBQ0FELEVBQUFHLEtBQUEsT0FBQUMsWUFBQSxJQUFBQSxZQUFBLElBQUFBLFlBQUEsSUFHQUMsR0FBQVYsR0FBQVcsTUFBQUMsVUFBQUMsaUJBQUEsRUFBQWhCLEVBQUEsS0FDQWlCLEVBQUFkLEdBQUFXLE1BQUFJLFNBQUFDLE9BQUEsRUFBQWxC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LFFBQ0FtSCxFQUFBYSxFQUNBakYsR0FGQW9FLEdBS0FwRSxFQUFBM0MsTUFBQSxTQUFBNEgsR0FDQSxNQUFBQyxXQUFBakksUUFDQUksRUFBQTRILEVBQ0FqRixHQUZBM0MsR0FLQVgsRUFBQXlJLE9BQUFuRixFQUFBOEMsRUFBQSxNQUVBOUMiLCJmaWxlIjoianMvYWxsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgY29sdW1uR3JhcGgoXCIjZ3doXCIsIFtcbiAgICAxLCAyMCwgMzAsIDQwLCA2MCwgMTAwXG4gIF0pO1xuICBjb2x1bW5HcmFwaChcIiNjbzJcIiwgW1xuICAgIDEsIDIwLCA0MCwgNDAsIDUwLCAxMDBcbiAgXSk7XG4gIGNvbHVtbkdyYXBoKFwiI2Nvc3RcIiwgW1xuICAgIDEsIDIwLCAzMCwgMzAsIDcwLCAxMDBcbiAgXSk7XG4gIGNvbHVtbkdyYXBoKFwiI2ludmVzdG1lbnRcIiwgW1xuICAgIDEsIDEwLCAyMCwgMzAsIDkwLCAxMDBcbiAgXSk7XG59KTtcblxuLy8gSGFja3ksIGZpeCBtZSFcbmZ1bmN0aW9uIGNvbHVtbkdyYXBoIChiaW5kVG8sIHZhbHVlcykge1xuICB2YXIgdyA9IDIwMDtcbiAgdmFyIGggPSA0MDA7XG5cbiAgdmFyIHN2ZyA9IGQzLnNlbGVjdChiaW5kVG8pLmFwcGVuZChcInN2ZzpzdmdcIilcbiAgICAuYXR0cihcImNsYXNzXCIsIFwiY2hhcnRcIilcbiAgICAuYXR0cihcIndpZHRoXCIsIHcpXG4gICAgLmF0dHIoXCJoZWlnaHRcIiwgaCApXG4gICAgLmFwcGVuZChcInN2ZzpnXCIpXG4gICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoNTAsNDAwKVwiKTtcblxuICB2YXIgbWF0cml4ID0gW3ZhbHVlc107XG5cbiAgLy8gUmFuZG9tIGZvciBub3dcbiAgdmFyIGNvbG9ycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG1hdHJpeFswXS5sZW5ndGggLTE7IGkrKykge1xuICAgIGNvbG9ycy5wdXNoKCdyZ2IoJyArIHJhbmRvbVJHQigpICsgJywnICsgcmFuZG9tUkdCKCkgKyAnLCcgKyByYW5kb21SR0IoKSArICcpJyk7XG4gIH1cblxuICB4ID0gZDMuc2NhbGUub3JkaW5hbCgpLnJhbmdlUm91bmRCYW5kcyhbMCwgdy01MF0pO1xuICB5ID0gZDMuc2NhbGUubGluZWFyKCkucmFuZ2UoWzAsIGgtNTBdKTtcbiAgeiA9IGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShjb2xvcnMpO1xuXG4gIHZhciByZW1hcHBlZCA9W1wiYzFcIixcImMyXCIsXCJjM1wiLFwiYzRcIixcImM1XCJdLm1hcChmdW5jdGlvbihkYXQsaSl7XG4gICAgcmV0dXJuIG1hdHJpeC5tYXAoZnVuY3Rpb24oZCxpaSl7XG4gICAgICByZXR1cm4ge3g6IGlpLCB5OiBkW2krMV0gfTtcbiAgICB9KVxuICB9KTtcblxuICB2YXIgc3RhY2tlZCA9IGQzLmxheW91dC5zdGFjaygpKHJlbWFwcGVkKVxuXG4gIHguZG9tYWluKHN0YWNrZWRbMF0ubWFwKGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueDsgfSkpO1xuICB5LmRvbWFpbihbMCwgZDMubWF4KHN0YWNrZWRbc3RhY2tlZC5sZW5ndGggLSAxXSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC55MCArIGQueTsgfSldKTtcblxuICB2YXIgdmFsZ3JvdXAgPSBzdmcuc2VsZWN0QWxsKFwiZy52YWxncm91cFwiKVxuICAgIC5kYXRhKHN0YWNrZWQpXG4gICAgLmVudGVyKCkuYXBwZW5kKFwic3ZnOmdcIilcbiAgICAuYXR0cihcImNsYXNzXCIsIFwidmFsZ3JvdXBcIilcbiAgICAuc3R5bGUoXCJmaWxsXCIsIGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuIHooaSk7IH0pXG4gICAgLnN0eWxlKFwic3Ryb2tlXCIsIGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuIGQzLnJnYih6KGkpKS5kYXJrZXIoKTsgfSk7XG5cbiAgdmFyIHJlY3QgPSB2YWxncm91cC5zZWxlY3RBbGwoXCJyZWN0XCIpXG4gICAgLmRhdGEoZnVuY3Rpb24oZCl7cmV0dXJuIGQ7fSlcbiAgICAuZW50ZXIoKS5hcHBlbmQoXCJzdmc6cmVjdFwiKVxuICAgIC5hdHRyKFwieFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiB4KGQueCk7IH0pXG4gICAgLmF0dHIoXCJ5XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIC15KGQueTApIC0geShkLnkpOyB9KVxuICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHkoZC55KTsgfSlcbiAgICAuYXR0cihcIndpZHRoXCIsIE1hdGgubWluLmFwcGx5KG51bGwsIFt4LnJhbmdlQmFuZCgpLTIsIDEwMF0pKTtcbn1cblxuZnVuY3Rpb24gcmFuZG9tUkdCICgpIHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1Nik7XG59XG4iLCIvKlxuICAgIEQzLmpzIFNsaWRlclxuICAgIEluc3BpcmVkIGJ5IGpRdWVyeSBVSSBTbGlkZXJcbiAgICBDb3B5cmlnaHQgKGMpIDIwMTMsIEJqb3JuIFNhbmR2aWsgLSBodHRwOi8vYmxvZy50aGVtYXRpY21hcHBpbmcub3JnXG4gICAgQlNEIGxpY2Vuc2U6IGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2VcbiovXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cbiAgICBkZWZpbmUoWydkMyddLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBpZiAocHJvY2Vzcy5icm93c2VyKSB7XG4gICAgICAvLyBCcm93c2VyaWZ5LiBJbXBvcnQgY3NzIHRvbyB1c2luZyBjc3NpZnkuXG4gICAgICByZXF1aXJlKCcuL2QzLnNsaWRlci5jc3MnKTtcbiAgICB9XG4gICAgLy8gTm9kZS4gRG9lcyBub3Qgd29yayB3aXRoIHN0cmljdCBDb21tb25KUywgYnV0XG4gICAgLy8gb25seSBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB0aGF0IHN1cHBvcnQgbW9kdWxlLmV4cG9ydHMsXG4gICAgLy8gbGlrZSBOb2RlLlxuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCdkMycpKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBCcm93c2VyIGdsb2JhbHMgKHJvb3QgaXMgd2luZG93KVxuICAgIHJvb3QuZDMuc2xpZGVyID0gZmFjdG9yeShyb290LmQzKTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbiAoZDMpIHtcbnJldHVybiBmdW5jdGlvbiBtb2R1bGUoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIC8vIFB1YmxpYyB2YXJpYWJsZXMgd2lkdGggZGVmYXVsdCBzZXR0aW5nc1xuICB2YXIgbWluID0gMCxcbiAgICAgIG1heCA9IDEwMCxcbiAgICAgIHN0ZXAgPSAwLjAxLFxuICAgICAgYW5pbWF0ZSA9IHRydWUsXG4gICAgICBvcmllbnRhdGlvbiA9IFwiaG9yaXpvbnRhbFwiLFxuICAgICAgYXhpcyA9IGZhbHNlLFxuICAgICAgbWFyZ2luID0gNTAsXG4gICAgICB2YWx1ZSxcbiAgICAgIGFjdGl2ZSA9IDEsXG4gICAgICBzbmFwID0gZmFsc2UsXG4gICAgICBzY2FsZTtcblxuICAvLyBQcml2YXRlIHZhcmlhYmxlc1xuICB2YXIgYXhpc1NjYWxlLFxuICAgICAgZGlzcGF0Y2ggPSBkMy5kaXNwYXRjaChcInNsaWRlXCIsIFwic2xpZGVlbmRcIiksXG4gICAgICBmb3JtYXRQZXJjZW50ID0gZDMuZm9ybWF0KFwiLjIlXCIpLFxuICAgICAgdGlja0Zvcm1hdCA9IGQzLmZvcm1hdChcIi4wXCIpLFxuICAgICAgaGFuZGxlMSxcbiAgICAgIGhhbmRsZTIgPSBudWxsLFxuICAgICAgZGl2UmFuZ2UsXG4gICAgICBzbGlkZXJMZW5ndGg7XG5cbiAgZnVuY3Rpb24gc2xpZGVyKHNlbGVjdGlvbikge1xuICAgIHNlbGVjdGlvbi5lYWNoKGZ1bmN0aW9uKCkge1xuXG4gICAgICAvLyBDcmVhdGUgc2NhbGUgaWYgbm90IGRlZmluZWQgYnkgdXNlclxuICAgICAgaWYgKCFzY2FsZSkge1xuICAgICAgICBzY2FsZSA9IGQzLnNjYWxlLmxpbmVhcigpLmRvbWFpbihbbWluLCBtYXhdKTtcbiAgICAgIH1cblxuICAgICAgLy8gU3RhcnQgdmFsdWVcbiAgICAgIHZhbHVlID0gdmFsdWUgfHwgc2NhbGUuZG9tYWluKClbMF07XG5cbiAgICAgIC8vIERJViBjb250YWluZXJcbiAgICAgIHZhciBkaXYgPSBkMy5zZWxlY3QodGhpcykuY2xhc3NlZChcImQzLXNsaWRlciBkMy1zbGlkZXItXCIgKyBvcmllbnRhdGlvbiwgdHJ1ZSk7XG4gICAgICBcbiAgICAgIHZhciBkcmFnID0gZDMuYmVoYXZpb3IuZHJhZygpO1xuICAgICAgZHJhZy5vbignZHJhZ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGlzcGF0Y2guc2xpZGVlbmQoZDMuZXZlbnQsIHZhbHVlKTtcbiAgICAgIH0pXG5cbiAgICAgIC8vIFNsaWRlciBoYW5kbGVcbiAgICAgIC8vaWYgcmFuZ2Ugc2xpZGVyLCBjcmVhdGUgdHdvXG4gICAgICAvLyB2YXIgZGl2UmFuZ2U7XG5cbiAgICAgIGlmICh0b1R5cGUodmFsdWUpID09IFwiYXJyYXlcIiAmJiB2YWx1ZS5sZW5ndGggPT0gMikge1xuICAgICAgICBoYW5kbGUxID0gZGl2LmFwcGVuZChcImFcIilcbiAgICAgICAgICAuY2xhc3NlZChcImQzLXNsaWRlci1oYW5kbGVcIiwgdHJ1ZSlcbiAgICAgICAgICAuYXR0cihcInhsaW5rOmhyZWZcIiwgXCIjXCIpXG4gICAgICAgICAgLmF0dHIoJ2lkJywgXCJoYW5kbGUtb25lXCIpXG4gICAgICAgICAgLm9uKFwiY2xpY2tcIiwgc3RvcFByb3BhZ2F0aW9uKVxuICAgICAgICAgIC5jYWxsKGRyYWcpO1xuICAgICAgICBoYW5kbGUyID0gZGl2LmFwcGVuZChcImFcIilcbiAgICAgICAgICAuY2xhc3NlZChcImQzLXNsaWRlci1oYW5kbGVcIiwgdHJ1ZSlcbiAgICAgICAgICAuYXR0cignaWQnLCBcImhhbmRsZS10d29cIilcbiAgICAgICAgICAuYXR0cihcInhsaW5rOmhyZWZcIiwgXCIjXCIpXG4gICAgICAgICAgLm9uKFwiY2xpY2tcIiwgc3RvcFByb3BhZ2F0aW9uKVxuICAgICAgICAgIC5jYWxsKGRyYWcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGFuZGxlMSA9IGRpdi5hcHBlbmQoXCJhXCIpXG4gICAgICAgICAgLmNsYXNzZWQoXCJkMy1zbGlkZXItaGFuZGxlXCIsIHRydWUpXG4gICAgICAgICAgLmF0dHIoXCJ4bGluazpocmVmXCIsIFwiI1wiKVxuICAgICAgICAgIC5hdHRyKCdpZCcsIFwiaGFuZGxlLW9uZVwiKVxuICAgICAgICAgIC5vbihcImNsaWNrXCIsIHN0b3BQcm9wYWdhdGlvbilcbiAgICAgICAgICAuY2FsbChkcmFnKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gSG9yaXpvbnRhbCBzbGlkZXJcbiAgICAgIGlmIChvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcblxuICAgICAgICBkaXYub24oXCJjbGlja1wiLCBvbkNsaWNrSG9yaXpvbnRhbCk7XG4gICAgICAgIFxuICAgICAgICBpZiAodG9UeXBlKHZhbHVlKSA9PSBcImFycmF5XCIgJiYgdmFsdWUubGVuZ3RoID09IDIpIHtcbiAgICAgICAgICBkaXZSYW5nZSA9IGQzLnNlbGVjdCh0aGlzKS5hcHBlbmQoJ2RpdicpLmNsYXNzZWQoXCJkMy1zbGlkZXItcmFuZ2VcIiwgdHJ1ZSk7XG5cbiAgICAgICAgICBoYW5kbGUxLnN0eWxlKFwibGVmdFwiLCBmb3JtYXRQZXJjZW50KHNjYWxlKHZhbHVlWyAwIF0pKSk7XG4gICAgICAgICAgZGl2UmFuZ2Uuc3R5bGUoXCJsZWZ0XCIsIGZvcm1hdFBlcmNlbnQoc2NhbGUodmFsdWVbIDAgXSkpKTtcbiAgICAgICAgICBkcmFnLm9uKFwiZHJhZ1wiLCBvbkRyYWdIb3Jpem9udGFsKTtcblxuICAgICAgICAgIHZhciB3aWR0aCA9IDEwMCAtIHBhcnNlRmxvYXQoZm9ybWF0UGVyY2VudChzY2FsZSh2YWx1ZVsgMSBdKSkpO1xuICAgICAgICAgIGhhbmRsZTIuc3R5bGUoXCJsZWZ0XCIsIGZvcm1hdFBlcmNlbnQoc2NhbGUodmFsdWVbIDEgXSkpKTtcbiAgICAgICAgICBkaXZSYW5nZS5zdHlsZShcInJpZ2h0XCIsIHdpZHRoK1wiJVwiKTtcbiAgICAgICAgICBkcmFnLm9uKFwiZHJhZ1wiLCBvbkRyYWdIb3Jpem9udGFsKTtcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGhhbmRsZTEuc3R5bGUoXCJsZWZ0XCIsIGZvcm1hdFBlcmNlbnQoc2NhbGUodmFsdWUpKSk7XG4gICAgICAgICAgZHJhZy5vbihcImRyYWdcIiwgb25EcmFnSG9yaXpvbnRhbCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHNsaWRlckxlbmd0aCA9IHBhcnNlSW50KGRpdi5zdHlsZShcIndpZHRoXCIpLCAxMCk7XG5cbiAgICAgIH0gZWxzZSB7IC8vIFZlcnRpY2FsXG5cbiAgICAgICAgZGl2Lm9uKFwiY2xpY2tcIiwgb25DbGlja1ZlcnRpY2FsKTtcbiAgICAgICAgZHJhZy5vbihcImRyYWdcIiwgb25EcmFnVmVydGljYWwpO1xuICAgICAgICBpZiAodG9UeXBlKHZhbHVlKSA9PSBcImFycmF5XCIgJiYgdmFsdWUubGVuZ3RoID09IDIpIHtcbiAgICAgICAgICBkaXZSYW5nZSA9IGQzLnNlbGVjdCh0aGlzKS5hcHBlbmQoJ2RpdicpLmNsYXNzZWQoXCJkMy1zbGlkZXItcmFuZ2UtdmVydGljYWxcIiwgdHJ1ZSk7XG5cbiAgICAgICAgICBoYW5kbGUxLnN0eWxlKFwiYm90dG9tXCIsIGZvcm1hdFBlcmNlbnQoc2NhbGUodmFsdWVbIDAgXSkpKTtcbiAgICAgICAgICBkaXZSYW5nZS5zdHlsZShcImJvdHRvbVwiLCBmb3JtYXRQZXJjZW50KHNjYWxlKHZhbHVlWyAwIF0pKSk7XG4gICAgICAgICAgZHJhZy5vbihcImRyYWdcIiwgb25EcmFnVmVydGljYWwpO1xuXG4gICAgICAgICAgdmFyIHRvcCA9IDEwMCAtIHBhcnNlRmxvYXQoZm9ybWF0UGVyY2VudChzY2FsZSh2YWx1ZVsgMSBdKSkpO1xuICAgICAgICAgIGhhbmRsZTIuc3R5bGUoXCJib3R0b21cIiwgZm9ybWF0UGVyY2VudChzY2FsZSh2YWx1ZVsgMSBdKSkpO1xuICAgICAgICAgIGRpdlJhbmdlLnN0eWxlKFwidG9wXCIsIHRvcCtcIiVcIik7XG4gICAgICAgICAgZHJhZy5vbihcImRyYWdcIiwgb25EcmFnVmVydGljYWwpO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaGFuZGxlMS5zdHlsZShcImJvdHRvbVwiLCBmb3JtYXRQZXJjZW50KHNjYWxlKHZhbHVlKSkpO1xuICAgICAgICAgIGRyYWcub24oXCJkcmFnXCIsIG9uRHJhZ1ZlcnRpY2FsKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgc2xpZGVyTGVuZ3RoID0gcGFyc2VJbnQoZGl2LnN0eWxlKFwiaGVpZ2h0XCIpLCAxMCk7XG5cbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKGF4aXMpIHtcbiAgICAgICAgY3JlYXRlQXhpcyhkaXYpO1xuICAgICAgfVxuXG5cbiAgICAgIGZ1bmN0aW9uIGNyZWF0ZUF4aXMoZG9tKSB7XG5cbiAgICAgICAgLy8gQ3JlYXRlIGF4aXMgaWYgbm90IGRlZmluZWQgYnkgdXNlclxuICAgICAgICBpZiAodHlwZW9mIGF4aXMgPT09IFwiYm9vbGVhblwiKSB7XG5cbiAgICAgICAgICBheGlzID0gZDMuc3ZnLmF4aXMoKVxuICAgICAgICAgICAgICAudGlja3MoTWF0aC5yb3VuZChzbGlkZXJMZW5ndGggLyAxMDApKVxuICAgICAgICAgICAgICAudGlja0Zvcm1hdCh0aWNrRm9ybWF0KVxuICAgICAgICAgICAgICAub3JpZW50KChvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpID8gXCJib3R0b21cIiA6ICBcInJpZ2h0XCIpO1xuXG4gICAgICAgIH1cblxuICAgICAgICAvLyBDb3B5IHNsaWRlciBzY2FsZSB0byBtb3ZlIGZyb20gcGVyY2VudGFnZXMgdG8gcGl4ZWxzXG4gICAgICAgIGF4aXNTY2FsZSA9IHNjYWxlLnRpY2tzID8gc2NhbGUuY29weSgpLnJhbmdlKFswLCBzbGlkZXJMZW5ndGhdKSA6IHNjYWxlLmNvcHkoKS5yYW5nZVBvaW50cyhbMCwgc2xpZGVyTGVuZ3RoXSwgMC41KTtcbiAgICAgICAgICBheGlzLnNjYWxlKGF4aXNTY2FsZSk7XG5cbiAgICAgICAgICAvLyBDcmVhdGUgU1ZHIGF4aXMgY29udGFpbmVyXG4gICAgICAgIHZhciBzdmcgPSBkb20uYXBwZW5kKFwic3ZnXCIpXG4gICAgICAgICAgICAuY2xhc3NlZChcImQzLXNsaWRlci1heGlzIGQzLXNsaWRlci1heGlzLVwiICsgYXhpcy5vcmllbnQoKSwgdHJ1ZSlcbiAgICAgICAgICAgIC5vbihcImNsaWNrXCIsIHN0b3BQcm9wYWdhdGlvbik7XG5cbiAgICAgICAgdmFyIGcgPSBzdmcuYXBwZW5kKFwiZ1wiKTtcblxuICAgICAgICAvLyBIb3Jpem9udGFsIGF4aXNcbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBcImhvcml6b250YWxcIikge1xuXG4gICAgICAgICAgc3ZnLnN0eWxlKFwibWFyZ2luLWxlZnRcIiwgLW1hcmdpbiArIFwicHhcIik7XG5cbiAgICAgICAgICBzdmcuYXR0cih7XG4gICAgICAgICAgICB3aWR0aDogc2xpZGVyTGVuZ3RoICsgbWFyZ2luICogMixcbiAgICAgICAgICAgIGhlaWdodDogbWFyZ2luXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoYXhpcy5vcmllbnQoKSA9PT0gXCJ0b3BcIikge1xuICAgICAgICAgICAgc3ZnLnN0eWxlKFwidG9wXCIsIC1tYXJnaW4gKyBcInB4XCIpO1xuICAgICAgICAgICAgZy5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgbWFyZ2luICsgXCIsXCIgKyBtYXJnaW4gKyBcIilcIik7XG4gICAgICAgICAgfSBlbHNlIHsgLy8gYm90dG9tXG4gICAgICAgICAgICBnLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyBtYXJnaW4gKyBcIiwwKVwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIHsgLy8gVmVydGljYWxcblxuICAgICAgICAgIHN2Zy5zdHlsZShcInRvcFwiLCAtbWFyZ2luICsgXCJweFwiKTtcblxuICAgICAgICAgIHN2Zy5hdHRyKHtcbiAgICAgICAgICAgIHdpZHRoOiBtYXJnaW4sXG4gICAgICAgICAgICBoZWlnaHQ6IHNsaWRlckxlbmd0aCArIG1hcmdpbiAqIDJcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGlmIChheGlzLm9yaWVudCgpID09PSBcImxlZnRcIikge1xuICAgICAgICAgICAgc3ZnLnN0eWxlKFwibGVmdFwiLCAtbWFyZ2luICsgXCJweFwiKTtcbiAgICAgICAgICAgIGcuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIG1hcmdpbiArIFwiLFwiICsgbWFyZ2luICsgXCIpXCIpO1xuICAgICAgICAgIH0gZWxzZSB7IC8vIHJpZ2h0ICAgICAgICAgIFxuICAgICAgICAgICAgZy5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgMCArIFwiLFwiICsgbWFyZ2luICsgXCIpXCIpO1xuICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgZy5jYWxsKGF4aXMpO1xuXG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIG9uQ2xpY2tIb3Jpem9udGFsKCkge1xuICAgICAgICBpZiAodG9UeXBlKHZhbHVlKSAhPSBcImFycmF5XCIpIHtcbiAgICAgICAgICB2YXIgcG9zID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oc2xpZGVyTGVuZ3RoLCBkMy5ldmVudC5vZmZzZXRYIHx8IGQzLmV2ZW50LmxheWVyWCkpO1xuICAgICAgICAgIG1vdmVIYW5kbGUoc2NhbGUuaW52ZXJ0ID8gXG4gICAgICAgICAgICAgICAgICAgICAgc3RlcFZhbHVlKHNjYWxlLmludmVydChwb3MgLyBzbGlkZXJMZW5ndGgpKVxuICAgICAgICAgICAgICAgICAgICA6IG5lYXJlc3RUaWNrKHBvcyAvIHNsaWRlckxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIG9uQ2xpY2tWZXJ0aWNhbCgpIHtcbiAgICAgICAgaWYgKHRvVHlwZSh2YWx1ZSkgIT0gXCJhcnJheVwiKSB7XG4gICAgICAgICAgdmFyIHBvcyA9IHNsaWRlckxlbmd0aCAtIE1hdGgubWF4KDAsIE1hdGgubWluKHNsaWRlckxlbmd0aCwgZDMuZXZlbnQub2Zmc2V0WSB8fCBkMy5ldmVudC5sYXllclkpKTtcbiAgICAgICAgICBtb3ZlSGFuZGxlKHNjYWxlLmludmVydCA/IFxuICAgICAgICAgICAgICAgICAgICAgIHN0ZXBWYWx1ZShzY2FsZS5pbnZlcnQocG9zIC8gc2xpZGVyTGVuZ3RoKSlcbiAgICAgICAgICAgICAgICAgICAgOiBuZWFyZXN0VGljayhwb3MgLyBzbGlkZXJMZW5ndGgpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBvbkRyYWdIb3Jpem9udGFsKCkge1xuICAgICAgICBpZiAoIGQzLmV2ZW50LnNvdXJjZUV2ZW50LnRhcmdldC5pZCA9PT0gXCJoYW5kbGUtb25lXCIpIHtcbiAgICAgICAgICBhY3RpdmUgPSAxO1xuICAgICAgICB9IGVsc2UgaWYgKCBkMy5ldmVudC5zb3VyY2VFdmVudC50YXJnZXQuaWQgPT0gXCJoYW5kbGUtdHdvXCIgKSB7XG4gICAgICAgICAgYWN0aXZlID0gMjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcG9zID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oc2xpZGVyTGVuZ3RoLCBkMy5ldmVudC54KSk7XG4gICAgICAgIG1vdmVIYW5kbGUoc2NhbGUuaW52ZXJ0ID8gXG4gICAgICAgICAgICAgICAgICAgIHN0ZXBWYWx1ZShzY2FsZS5pbnZlcnQocG9zIC8gc2xpZGVyTGVuZ3RoKSlcbiAgICAgICAgICAgICAgICAgIDogbmVhcmVzdFRpY2socG9zIC8gc2xpZGVyTGVuZ3RoKSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIG9uRHJhZ1ZlcnRpY2FsKCkge1xuICAgICAgICBpZiAoIGQzLmV2ZW50LnNvdXJjZUV2ZW50LnRhcmdldC5pZCA9PT0gXCJoYW5kbGUtb25lXCIpIHtcbiAgICAgICAgICBhY3RpdmUgPSAxO1xuICAgICAgICB9IGVsc2UgaWYgKCBkMy5ldmVudC5zb3VyY2VFdmVudC50YXJnZXQuaWQgPT0gXCJoYW5kbGUtdHdvXCIgKSB7XG4gICAgICAgICAgYWN0aXZlID0gMjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcG9zID0gc2xpZGVyTGVuZ3RoIC0gTWF0aC5tYXgoMCwgTWF0aC5taW4oc2xpZGVyTGVuZ3RoLCBkMy5ldmVudC55KSlcbiAgICAgICAgbW92ZUhhbmRsZShzY2FsZS5pbnZlcnQgPyBcbiAgICAgICAgICAgICAgICAgICAgc3RlcFZhbHVlKHNjYWxlLmludmVydChwb3MgLyBzbGlkZXJMZW5ndGgpKVxuICAgICAgICAgICAgICAgICAgOiBuZWFyZXN0VGljayhwb3MgLyBzbGlkZXJMZW5ndGgpKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gc3RvcFByb3BhZ2F0aW9uKCkge1xuICAgICAgICBkMy5ldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH1cblxuICAgIH0pO1xuXG4gIH1cblxuICAvLyBNb3ZlIHNsaWRlciBoYW5kbGUgb24gY2xpY2svZHJhZ1xuICBmdW5jdGlvbiBtb3ZlSGFuZGxlKG5ld1ZhbHVlKSB7XG4gICAgdmFyIGN1cnJlbnRWYWx1ZSA9IHRvVHlwZSh2YWx1ZSkgPT0gXCJhcnJheVwiICAmJiB2YWx1ZS5sZW5ndGggPT0gMiA/IHZhbHVlW2FjdGl2ZSAtIDFdOiB2YWx1ZSxcbiAgICAgICAgb2xkUG9zID0gZm9ybWF0UGVyY2VudChzY2FsZShzdGVwVmFsdWUoY3VycmVudFZhbHVlKSkpLFxuICAgICAgICBuZXdQb3MgPSBmb3JtYXRQZXJjZW50KHNjYWxlKHN0ZXBWYWx1ZShuZXdWYWx1ZSkpKSxcbiAgICAgICAgcG9zaXRpb24gPSAob3JpZW50YXRpb24gPT09IFwiaG9yaXpvbnRhbFwiKSA/IFwibGVmdFwiIDogXCJib3R0b21cIjtcbiAgICBpZiAob2xkUG9zICE9PSBuZXdQb3MpIHtcblxuICAgICAgaWYgKHRvVHlwZSh2YWx1ZSkgPT0gXCJhcnJheVwiICYmIHZhbHVlLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgIHZhbHVlWyBhY3RpdmUgLSAxIF0gPSBuZXdWYWx1ZTtcbiAgICAgICAgaWYgKGQzLmV2ZW50KSB7XG4gICAgICAgICAgZGlzcGF0Y2guc2xpZGUoZDMuZXZlbnQsIHZhbHVlICk7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZDMuZXZlbnQpIHtcbiAgICAgICAgICBkaXNwYXRjaC5zbGlkZShkMy5ldmVudC5zb3VyY2VFdmVudCB8fCBkMy5ldmVudCwgdmFsdWUgPSBuZXdWYWx1ZSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGlmICggdmFsdWVbIDAgXSA+PSB2YWx1ZVsgMSBdICkgcmV0dXJuO1xuICAgICAgaWYgKCBhY3RpdmUgPT09IDEgKSB7XG4gICAgICAgIGlmICh0b1R5cGUodmFsdWUpID09IFwiYXJyYXlcIiAmJiB2YWx1ZS5sZW5ndGggPT0gMikge1xuICAgICAgICAgIChwb3NpdGlvbiA9PT0gXCJsZWZ0XCIpID8gZGl2UmFuZ2Uuc3R5bGUoXCJsZWZ0XCIsIG5ld1BvcykgOiBkaXZSYW5nZS5zdHlsZShcImJvdHRvbVwiLCBuZXdQb3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGFuaW1hdGUpIHtcbiAgICAgICAgICBoYW5kbGUxLnRyYW5zaXRpb24oKVxuICAgICAgICAgICAgICAuc3R5bGVUd2Vlbihwb3NpdGlvbiwgZnVuY3Rpb24oKSB7IHJldHVybiBkMy5pbnRlcnBvbGF0ZShvbGRQb3MsIG5ld1Bvcyk7IH0pXG4gICAgICAgICAgICAgIC5kdXJhdGlvbigodHlwZW9mIGFuaW1hdGUgPT09IFwibnVtYmVyXCIpID8gYW5pbWF0ZSA6IDI1MCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaGFuZGxlMS5zdHlsZShwb3NpdGlvbiwgbmV3UG9zKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgXG4gICAgICAgIHZhciB3aWR0aCA9IDEwMCAtIHBhcnNlRmxvYXQobmV3UG9zKTtcbiAgICAgICAgdmFyIHRvcCA9IDEwMCAtIHBhcnNlRmxvYXQobmV3UG9zKTtcblxuICAgICAgICAocG9zaXRpb24gPT09IFwibGVmdFwiKSA/IGRpdlJhbmdlLnN0eWxlKFwicmlnaHRcIiwgd2lkdGggKyBcIiVcIikgOiBkaXZSYW5nZS5zdHlsZShcInRvcFwiLCB0b3AgKyBcIiVcIik7XG4gICAgICAgIFxuICAgICAgICBpZiAoYW5pbWF0ZSkge1xuICAgICAgICAgIGhhbmRsZTIudHJhbnNpdGlvbigpXG4gICAgICAgICAgICAgIC5zdHlsZVR3ZWVuKHBvc2l0aW9uLCBmdW5jdGlvbigpIHsgcmV0dXJuIGQzLmludGVycG9sYXRlKG9sZFBvcywgbmV3UG9zKTsgfSlcbiAgICAgICAgICAgICAgLmR1cmF0aW9uKCh0eXBlb2YgYW5pbWF0ZSA9PT0gXCJudW1iZXJcIikgPyBhbmltYXRlIDogMjUwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBoYW5kbGUyLnN0eWxlKHBvc2l0aW9uLCBuZXdQb3MpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQ2FsY3VsYXRlIG5lYXJlc3Qgc3RlcCB2YWx1ZVxuICBmdW5jdGlvbiBzdGVwVmFsdWUodmFsKSB7XG5cbiAgICBpZiAodmFsID09PSBzY2FsZS5kb21haW4oKVswXSB8fCB2YWwgPT09IHNjYWxlLmRvbWFpbigpWzFdKSB7XG4gICAgICByZXR1cm4gdmFsO1xuICAgIH1cblxuICAgIHZhciBhbGlnblZhbHVlID0gdmFsO1xuICAgIGlmIChzbmFwKSB7XG4gICAgICBhbGlnblZhbHVlID0gbmVhcmVzdFRpY2soc2NhbGUodmFsKSk7XG4gICAgfSBlbHNle1xuICAgICAgdmFyIHZhbE1vZFN0ZXAgPSAodmFsIC0gc2NhbGUuZG9tYWluKClbMF0pICUgc3RlcDtcbiAgICAgIGFsaWduVmFsdWUgPSB2YWwgLSB2YWxNb2RTdGVwO1xuXG4gICAgICBpZiAoTWF0aC5hYnModmFsTW9kU3RlcCkgKiAyID49IHN0ZXApIHtcbiAgICAgICAgYWxpZ25WYWx1ZSArPSAodmFsTW9kU3RlcCA+IDApID8gc3RlcCA6IC1zdGVwO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gYWxpZ25WYWx1ZTtcblxuICB9XG5cbiAgLy8gRmluZCB0aGUgbmVhcmVzdCB0aWNrXG4gIGZ1bmN0aW9uIG5lYXJlc3RUaWNrKHBvcykge1xuICAgIHZhciB0aWNrcyA9IHNjYWxlLnRpY2tzID8gc2NhbGUudGlja3MoKSA6IHNjYWxlLmRvbWFpbigpO1xuICAgIHZhciBkaXN0ID0gdGlja3MubWFwKGZ1bmN0aW9uKGQpIHtyZXR1cm4gcG9zIC0gc2NhbGUoZCk7fSk7XG4gICAgdmFyIGkgPSAtMSxcbiAgICAgICAgaW5kZXggPSAwLFxuICAgICAgICByID0gc2NhbGUudGlja3MgPyBzY2FsZS5yYW5nZSgpWzFdIDogc2NhbGUucmFuZ2VFeHRlbnQoKVsxXTtcbiAgICBkbyB7XG4gICAgICAgIGkrKztcbiAgICAgICAgaWYgKE1hdGguYWJzKGRpc3RbaV0pIDwgcikge1xuICAgICAgICAgIHIgPSBNYXRoLmFicyhkaXN0W2ldKTtcbiAgICAgICAgICBpbmRleCA9IGk7XG4gICAgICAgIH07XG4gICAgfSB3aGlsZSAoZGlzdFtpXSA+IDAgJiYgaSA8IGRpc3QubGVuZ3RoIC0gMSk7XG5cbiAgICByZXR1cm4gdGlja3NbaW5kZXhdO1xuICB9O1xuXG4gIC8vIFJldHVybiB0aGUgdHlwZSBvZiBhbiBvYmplY3RcbiAgZnVuY3Rpb24gdG9UeXBlKHYpIHtcbiAgICByZXR1cm4gKHt9KS50b1N0cmluZy5jYWxsKHYpLm1hdGNoKC9cXHMoW2EtekEtWl0rKS8pWzFdLnRvTG93ZXJDYXNlKCk7XG4gIH07XG5cbiAgLy8gR2V0dGVyL3NldHRlciBmdW5jdGlvbnNcbiAgc2xpZGVyLm1pbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtaW47XG4gICAgbWluID0gXztcbiAgICByZXR1cm4gc2xpZGVyO1xuICB9O1xuXG4gIHNsaWRlci5tYXggPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbWF4O1xuICAgIG1heCA9IF87XG4gICAgcmV0dXJuIHNsaWRlcjtcbiAgfTtcblxuICBzbGlkZXIuc3RlcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzdGVwO1xuICAgIHN0ZXAgPSBfO1xuICAgIHJldHVybiBzbGlkZXI7XG4gIH07XG5cbiAgc2xpZGVyLmFuaW1hdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYW5pbWF0ZTtcbiAgICBhbmltYXRlID0gXztcbiAgICByZXR1cm4gc2xpZGVyO1xuICB9O1xuXG4gIHNsaWRlci5vcmllbnRhdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvcmllbnRhdGlvbjtcbiAgICBvcmllbnRhdGlvbiA9IF87XG4gICAgcmV0dXJuIHNsaWRlcjtcbiAgfTtcblxuICBzbGlkZXIuYXhpcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBheGlzO1xuICAgIGF4aXMgPSBfO1xuICAgIHJldHVybiBzbGlkZXI7XG4gIH07XG5cbiAgc2xpZGVyLm1hcmdpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtYXJnaW47XG4gICAgbWFyZ2luID0gXztcbiAgICByZXR1cm4gc2xpZGVyO1xuICB9O1xuXG4gIHNsaWRlci52YWx1ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB2YWx1ZTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIG1vdmVIYW5kbGUoc3RlcFZhbHVlKF8pKTtcbiAgICB9O1xuICAgIHZhbHVlID0gXztcbiAgICByZXR1cm4gc2xpZGVyO1xuICB9O1xuXG4gIHNsaWRlci5zbmFwID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNuYXA7XG4gICAgc25hcCA9IF87XG4gICAgcmV0dXJuIHNsaWRlcjtcbiAgfTtcblxuICBzbGlkZXIuc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2NhbGU7XG4gICAgc2NhbGUgPSBfO1xuICAgIHJldHVybiBzbGlkZXI7XG4gIH07XG5cbiAgZDMucmViaW5kKHNsaWRlciwgZGlzcGF0Y2gsIFwib25cIik7XG5cbiAgcmV0dXJuIHNsaWRlcjtcblxufVxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9