function updateCars(t){document.getElementById("carNumber").value=t,document.getElementById("carRange").value=t,updateGraph("#gwh-chart",mockAdjustGWh())}function columnGraph(t,n){for(var r=80,a=300,e=d3.select(t).append("svg:svg").attr("class","chart").attr("width",r).attr("height",a).append("svg:g").attr("transform","translate(0,300)"),o=[n],c=[],u=0;u<o[0].length-1;u++)c.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")");x=d3.scale.ordinal().rangeRoundBands([0,r]),y=d3.scale.linear().range([0,a]),z=d3.scale.ordinal().range(c);var d=["c1","c2","c3","c4","c5"].map(function(t,n){return o.map(function(t,r){return{x:r,y:t[n+1]}})}),l=d3.layout.stack()(d);x.domain(l[0].map(function(t){return t.x})),y.domain([0,d3.max(l[l.length-1],function(t){return t.y0+t.y})]);{var i=e.selectAll("g.valgroup").data(l).enter().append("svg:g").attr("class","valgroup").style("fill",function(t,n){return z(n)}).style("stroke",function(t,n){return d3.rgb(z(n)).darker()});i.selectAll("rect").data(function(t){return t}).enter().append("svg:rect").attr("x",function(t){return x(t.x)}).attr("y",function(t){return-y(t.y0)-y(t.y)}).attr("height",function(t){return y(t.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function updateGraph(t,n){for(var r=80,a=300,e=d3.select(t).append("svg:svg").attr("class","chart").attr("width",r).attr("height",a).append("svg:g").attr("transform","translate(0,300)"),o=[n],c=[],u=0;u<o[0].length-1;u++)c.push("rgb("+randomRGB()+","+randomRGB()+","+randomRGB()+")");x=d3.scale.ordinal().rangeRoundBands([0,r]),y=d3.scale.linear().range([0,a]),z=d3.scale.ordinal().range(c);var d=["c1","c2","c3","c4","c5"].map(function(t,n){return o.map(function(t,r){return{x:r,y:t[n+1]}})}),l=d3.layout.stack()(d);x.domain(l[0].map(function(t){return t.x})),y.domain([0,d3.max(l[l.length-1],function(t){return t.y0+t.y})]);{var i=e.selectAll("g.valgroup").data(l).enter().append("svg:g").attr("class","valgroup").style("fill",function(t,n){return z(n)}).style("stroke",function(t,n){return d3.rgb(z(n)).darker()});i.selectAll("rect").data(function(t){return t}).enter().append("svg:rect").attr("x",function(t){return x(t.x)}).attr("y",function(t){return-y(t.y0)-y(t.y)}).attr("height",function(t){return y(t.y)}).attr("width",Math.min.apply(null,[x.rangeBand()-2,100]))}}function randomRGB(){return Math.floor(256*Math.random())}function shockingUpdate(t){var n={Hydro:24095,Geothermal:6487,Wind:2187,Coal:1832,Gas:6626},r={Hydro:0,Geothermal:847.32,Wind:0,Coal:1222.2,Gas:3405.51},a={Road:12688},e={gen_production:n,gen_emissions:r,fleet_emissions:a};return e}function mockGWh(){return{Hydro:24095,Geothermal:6487,Wind:2187,Coal:1832,Gas:6626}}function mockAdjustGWh(){return{Hydro:24095,Geothermal:6487,Wind:2187,Coal:1832,Gas:6626}}function mockGenerationEmissions(){return{Hydro:0,Geothermal:847.32,Wind:0,Coal:1222.2,Gas:3405.51}}function mockFleetEmissions(){return{Road:12688}}document.addEventListener("DOMContentLoaded",function(t){columnGraph("#co2-chart",[1,10,20,20,25,50]),columnGraph("#gwh-chart",[1,10,15,20,30,50]),columnGraph("#cost-chart",[1,10,15,15,35,50]),columnGraph("#investment-chart",[1,5,10,15,45,50])});var input_test={electric_cars:1};
//# sourceMappingURL=data:application/json;base64,